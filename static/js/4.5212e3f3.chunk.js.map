{"version":3,"sources":["components/Dialogues/Dialogues.module.css","hoc/withAuthRedirect.js","components/Dialogues/DialogueItem/DialogueIem.js","components/Dialogues/Message/Message.js","components/Dialogues/Dialogues.js","components/Dialogues/DialoguesContainer.js"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","DialogueItem","props","path","id","className","s","dialogue","to","name","Message","message","messageLength100","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","requiredField","placeholder","rows","cols","submitButton","Dialogues","dialogues_page","dialogues_elements","dialogues","map","d","messages_elements","messages","m","dialogue_items","send_message","values","newMessageText","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,eAAiB,kCAAkC,OAAS,0BAA0B,SAAW,4BAA4B,SAAW,4BAA4B,QAAU,2BAA2B,aAAe,gCAAgC,aAAe,kC,iICG9TC,EAA6B,SAACC,GAAD,MAAY,CAC3CC,OAAQD,EAAME,KAAKD,S,mCCQNE,EATM,SAACC,GACpB,IAAIC,EAAO,cAAgBD,EAAME,GACjC,OACE,qBAAKC,UAAWC,IAAEC,SAAlB,SACE,cAAC,IAAD,CAASC,GAAIL,EAAb,SAAoBD,EAAMO,UCAjBC,EAJC,SAACR,GACf,OAAO,qBAAKG,UAAWC,IAAEK,QAAlB,SAA4BT,EAAMS,W,iCC+BvCC,EAAmBC,YAAiB,KAmBlCC,EAAsBC,YAAU,CAAEC,KAAM,0BAAlBD,EAlBL,SAACb,GACtB,OACE,uBAAMe,SAAUf,EAAMgB,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,SAAU,CAACC,IAAeX,GAC1BH,KAAK,iBACLe,YAAY,6GACZC,KAAK,IACLC,KAAK,SAGT,wBAAQrB,UAAWC,IAAEqB,aAArB,0EASSC,EAhDG,SAAC1B,GACjB,IAAIJ,EAAQI,EAAM2B,eAEdC,EAAqBhC,EAAMiC,UAAUC,KAAI,SAACC,GAAD,OAC3C,cAAC,EAAD,CAAyBxB,KAAMwB,EAAExB,KAAML,GAAI6B,EAAE7B,IAA1B6B,EAAE7B,OAGnB8B,EAAoBpC,EAAMqC,SAASH,KAAI,SAACI,GAAD,OACzC,cAAC,EAAD,CAASzB,QAASyB,EAAEzB,QAAoBP,GAAIgC,EAAEhC,IAAZgC,EAAEhC,OAOtC,OACE,sBAAKC,UAAWC,IAAEyB,UAAlB,UACE,qBAAK1B,UAAWC,IAAE+B,eAAlB,SAAmCP,IACnC,qBAAKzB,UAAWC,IAAE6B,SAAlB,SAA6BD,IAC7B,qBAAK7B,UAAWC,IAAEgC,aAAlB,SACE,cAACxB,EAAD,CAAqBG,SATP,SAACsB,GACnBrC,EAAMoC,aAAaC,EAAOC,yBCHfC,sBACbC,aAfoB,SAAC5C,GACrB,MAAO,CACL+B,eAAgB/B,EAAM+B,mBAID,SAACc,GACxB,MAAO,CACLL,aAAc,SAACE,GACbG,EAASC,YAAmBJ,UJPF,SAACK,GAAe,IACxCC,EADuC,4JAE3C,WACE,OAAKC,KAAK7C,MAAMH,OACT,cAAC8C,EAAD,eAAeE,KAAK7C,QADI,cAAC,IAAD,CAAUM,GAAG,eAHH,GACbwC,IAAMH,WAWtC,OAJqCH,YAAQ7C,EAAR6C,CACnCI,KIGWL,CAGbb","file":"static/js/4.5212e3f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogues\":\"Dialogues_dialogues__aay4x\",\"dialogue_items\":\"Dialogues_dialogue_items__2VmDB\",\"active\":\"Dialogues_active__Pc484\",\"dialogue\":\"Dialogues_dialogue__2He1Z\",\"messages\":\"Dialogues_messages__dsM7w\",\"message\":\"Dialogues_message__3YM-L\",\"send_message\":\"Dialogues_send_message__1WHQw\",\"submitButton\":\"Dialogues_submitButton__2t-DE\"};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./../Dialogues.module.css\";\r\n\r\nconst DialogueItem = (props) => {\r\n  let path = \"/dialogues/\" + props.id;\r\n  return (\r\n    <div className={s.dialogue}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogueItem;\r\n","import React from \"react\";\r\n\r\nimport s from \"./../Dialogues.module.css\";\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport s from \"./Dialogues.module.css\";\r\nimport DialogueItem from \"./DialogueItem/DialogueIem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../common/FormsControl/FormsControl\";\r\nimport {\r\n  maxLengthCreator,\r\n  requiredField,\r\n} from \"../utils/validators/validators\";\r\n\r\nconst Dialogues = (props) => {\r\n  let state = props.dialogues_page;\r\n\r\n  let dialogues_elements = state.dialogues.map((d) => (\r\n    <DialogueItem key={d.id} name={d.name} id={d.id} />\r\n  ));\r\n\r\n  let messages_elements = state.messages.map((m) => (\r\n    <Message message={m.message} key={m.id} id={m.id} />\r\n  ));\r\n\r\n  let addNewMessage = (values) => {\r\n    props.send_message(values.newMessageText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.dialogues}>\r\n      <div className={s.dialogue_items}>{dialogues_elements}</div>\r\n      <div className={s.messages}>{messages_elements}</div>\r\n      <div className={s.send_message}>\r\n        <AddMessageReduxForm onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nlet messageLength100 = maxLengthCreator(100);\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          validate={[requiredField, messageLength100]}\r\n          name=\"newMessageText\"\r\n          placeholder=\"Напишите сообщение...\"\r\n          rows=\"5\"\r\n          cols=\"50\"\r\n        />\r\n      </div>\r\n      <button className={s.submitButton}>Отправить</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageReduxForm = reduxForm({ form: \"dialogueAddMessageForm\" })(\r\n  AddMessageForm\r\n);\r\n\r\nexport default Dialogues;\r\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { sendMessageCreator } from \"../../redux/dialogues-reducer\";\r\nimport Dialogues from \"./Dialogues\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogues_page: state.dialogues_page,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    send_message: (newMessageText) => {\r\n      dispatch(sendMessageCreator(newMessageText));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogues);\r\n"],"sourceRoot":""}